var activityArray = [];
activityArray['childrenClasses'] = [];
activityArray['devotionalMeetings'] = [];
activityArray['juniorYouthGroups'] = [];
activityArray['studyCircles'] = [];
var activityKeys = Object.keys(activityArray);
var activityIcon;
var activityCategory;
var allActivities = [];
var map;
var newIcon = '<%= asset_path('info.png') %>';
var icons = {
  childrenClasses: {
    name: 'Children\'s class',
    icon: '<%= asset_path('childrenClasses.png') %>'
  },
  devotionalMeetings: {
    name: 'Devotional meeting',
    icon: '<%= asset_path('devotionalMeetings.png') %>'
  },
  juniorYouthGroups: {
    name: 'Junior youth group',
    icon: '<%= asset_path('juniorYouthGroups.png') %>'
  },
  studyCircles: {
    name: 'Study circle',
    icon: '<%= asset_path('studyCircles.png') %>'
  }
};
var infowindow;
var tempMarker;

function initMap() {
  var mapDiv = document.getElementById('map');
  map = new google.maps.Map(mapDiv, {
    zoom: 11,
    streetViewControl: false,
    styles: [
      {
        featureType: 'poi',
        elementType: 'geometry',
        stylers: [
          { visibility: 'off' }
        ]
      }
    ]});

  infowindow = new google.maps.InfoWindow();
  geoLocate(map);

  var legend = document.getElementById('legend');
  for (var key in icons) {
    var type = icons[key];
    var name = type.name;
    var icon = type.icon;
    var div = document.createElement('div');
    div.innerHTML = '<img src="' + icon + '"> ' + name;
    legend.appendChild(div);
  }

  map.controls[google.maps.ControlPosition.RIGHT_TOP].push(document.getElementById('legend'));

  var existingActivities = setActivities();

  for (var i = 0, activity; activity = existingActivities[i]; i++) {
    addMarker(activity);
  }

  map.addListener('click', function(event) {
    closeInfoWindow(map);
    clearMarker(tempMarker);
    addMarkerFromClick(event.latLng);
  });

  window.addEventListener('keyup', function(e) {
    if (e.keyCode == 27) {
      closeInfoWindow();
      clearMarker(tempMarker);
    }
  });
}

function addMarkerFromClick(location) {
  tempMarker = new google.maps.Marker({
    position: location,
    icon: newIcon,
    map: map
  });

  var cluster_id = $("#selectCluster").val();

  var parameters = {
    latitude: location.lat(),
    longitude: location.lng(),
    cluster_id: cluster_id
  };

  $.ajax({
    url: '/activities/new?' + jQuery.param({activity: parameters}) + '#chunked=true',
    type: 'GET',
    async: false,
    success: function(html) {
      var createFormOpen = function() {
        openInfoWindow(html, tempMarker);
        hideUniqueField();
        $("#activity_activity_type_id").focus();

        infowindow.addListener('closeclick', function() {
          clearMarker(tempMarker);
        });

        tempMarker.addListener('click', function() {
          createFormOpen();
        });
      }
      createFormOpen();
    }
  });
}

function viewActivityDetail(event, activity) {
  $('.activity-table').hide();
  if ($(event.target).hasClass('is-open')) {
    $(event.target).removeClass('is-open');
  }
  else {
      $('.btn.activity-btn.show-list').removeClass('is-open');
      $(event.target).addClass('is-open');
      var activityTable = "#" + activity + "Table";
      $.ajax({
        url: '/activities/stats',
        type: 'GET',
        dataType: 'json',
        data: {activityType: activity, cluster: $("#selectCluster").val()},
        success: function(result) {
          var activityInformation = "";
          for (var key in result) {
            activityInformation += "<tr onclick=\"triggerMarker(" + result[key].id + ")\">";
            activityInformation += "<td>";
            activityInformation += result[key].hostedBy;
            activityInformation += "</td>";
            activityInformation += "<td>";
            activityInformation += result[key].participants;
            activityInformation += "</td>";
            if (activity == 'childrenClasses') {
              activityInformation += "<td>";
              activityInformation += result[key].uniquefield;
              activityInformation += "<td>";
            }
            else if (activity == 'studyCircles') {
              activityInformation += "<td>";
              activityInformation += result[key].uniquefield;
              activityInformation += "</td>";
            }
            activityInformation += "</tr>";
          }
          $(activityTable).html(activityInformation);
        },
        error: function(jqXHR, textStatus, errorThrown) {
          alert(textStatus + " and " + errorThrown);
        }
      });
      $(activityTable).parent().show();
    }
}

function addMarker(activity) {
  var marker = new google.maps.Marker({
    position: activity.position,
    type: activity.type,
    icon: icons[activity.type].icon,
    map: map,
    activityId: activity.activityId
  });
  marker.addListener('click', function() {
    openInfoWindow(activity.html, marker);
  });
  allActivities.push(marker);
  activityArray[activity.type].push(marker);
}

function findMarker(markerId) {
  for (var i = 0, activity; activity = allActivities[i]; i++) {
    if (activity.activityId == markerId) {
      return activity;
    }
  }
}

function toggleMarkers(category) {
  for (var i = 0; i < activityArray[category].length; i++) {
    if (activityArray[category][i].map == null) {
      activityArray[category][i].setMap(map);
    }
    else {
      activityArray[category][i].setMap(null);
    }
  }
}

function changeIcon() {
  var activityCategorySelection = $("#activity_activity_type_id").val();
  if (activityCategorySelection != "") {
    activityCategory = activityKeys[activityCategorySelection - 1]
    activityIcon = icons[activityCategory].icon;
    tempMarker.setIcon(activityIcon);
    $("#submitButton").prop('disabled', false);
    showHideUniqueField(activityCategory);
  } else {
    activityCategory = "";
    tempMarker.setIcon(newIcon);
    $("#submitButton").prop('disabled', true);
    hideUniqueField();
  }
}

function showHideUniqueField(activityCategory) {
  if (activityCategory == 'devotionalMeetings') {
      $("#teacherTutorAnimatorDiv").hide();
    }
  else {
    $(".uniquefieldDiv").show();
    $("#teacherTutorAnimatorDiv").show();
    if (activityCategory == 'childrenClasses') {
      $("#uniquefieldLabel").text("Age range:");
      $("#teacherTutorAnimatorLabel").text("Teacher(s):");
    }
    else {
      $("#uniquefieldLabel").text("Book:");
      if (activityCategory == 'studyCircles') {
        $("#teacherTutorAnimatorLabel").text("Tutor(s):");
      }
      else {
        $("#teacherTutorAnimatorLabel").text("Animator(s):");
      }
    }
  }
}
