var activityArray = [];
activityArray['childrenClasses'] = [];
activityArray['devotionalMeetings'] = [];
activityArray['juniorYouthGroups'] = [];
activityArray['studyCircles'] = [];
var activityKeys = Object.keys(activityArray);
var activityIcon;
var activityCategory;
var allActivities = [];
var map;
var newIcon = '<%= asset_path('info.png') %>';
var icons = {
  childrenClasses: {
    name: 'Children\'s class',
    icon: '<%= asset_path('childrenClasses.png') %>'
  },
  devotionalMeetings: {
    name: 'Devotional meeting',
    icon: '<%= asset_path('devotionalMeetings.png') %>'
  },
  juniorYouthGroups: {
    name: 'Junior youth group',
    icon: '<%= asset_path('juniorYouthGroups.png') %>'
  },
  studyCircles: {
    name: 'Study circle',
    icon: '<%= asset_path('studyCircles.png') %>'
  }
};
var infowindow;
var tempMarker;

function initMap() {
  var mapDiv = document.getElementById('map');
  map = new google.maps.Map(mapDiv, {
    zoom: 11,
    styles: [
      {
        featureType: 'poi',
        elementType: 'geometry',
        stylers: [
          { visibility: 'off' }
        ]
      }
    ]});

  infowindow = new google.maps.InfoWindow();
  geoLocate(map);

  var legend = document.getElementById('legend');
  for (var key in icons) {
    var type = icons[key];
    var name = type.name;
    var icon = type.icon;
    var div = document.createElement('div');
    div.innerHTML = '<img src="' + icon + '"> ' + name;
    legend.appendChild(div);
  }

  map.controls[google.maps.ControlPosition.RIGHT_TOP].push(document.getElementById('legend'));

  var existingActivities = setActivities();

  for (var i = 0, activity; activity = existingActivities[i]; i++) {
    addMarker(activity);
  }

  map.addListener('click', function(event) {
    closeInfoWindow(map);
    clearMarker(tempMarker);
    addMarkerFromClick(event.latLng);
  });
}

function addMarkerFromClick(location) {
  tempMarker = new google.maps.Marker({
    position: location,
    icon: newIcon,
    map: map
  });

  var splitLocations = {
    latitude: location.lat(),
    longitude: location.lng()
  };

  $.ajax({
    url: '/activities/new?' + jQuery.param({activity: splitLocations}) + '#chunked=true',
    type: 'GET',
    async: false,
    success: function(html) {
      var createFormOpen = function() {
        openInfoWindow(html, tempMarker);
        hideUniqueField();
        $("#activity_activity_type_id").focus();

        infowindow.addListener('closeclick', function() {
          clearMarker(tempMarker);
        });

        tempMarker.addListener('click', function() {
          createFormOpen();
        });
      }

      createFormOpen();
    }
  });
}

function viewActivityDetail(activity) {
  var activityDiv = "#" + activity + "Div";
  if (!$(activityDiv).is(":visible")) {
  $.ajax({
    url: 'activities/stats',
    type: 'GET',
    dataType: 'json',
    data: {activityType: activity},
    success: function(result) {
      var activityInformation = "";
      for (var key in result) {
        activityInformation += "<a href=\"#\" onclick=\"triggerMarker(" + result[key].id + ")\">";
        activityInformation += "Host: " + result[key].hostedBy + " | Participants: " + result[key].participants + "\n";
        if (activity == 'childrenClasses') {
          activityInformation += " | Age range: " + result[key].uniquefield + "\n";
        }
        else if (activity == 'studyCircles') {
          activityInformation += " | Book: " + result[key].uniquefield + "\n";
        }
        activityInformation += "</a><br>\n";
      }
      $(activityDiv).html(activityInformation);
    }
  });
  $(activityDiv).show();
}
else {
  $(activityDiv).hide();
}
}

function updateActivitySide(activityName) {
  var activityDiv = "#" + activityName + "Div";
  if ($(activityDiv).is(":visible")) {
    $(activityDiv).hide();
  }
  else {
    $(activityDiv).show();
  }
  viewActivityDetail(activityName);
}

function triggerMarker(activityId) {
  google.maps.event.trigger(findMarker(activityId), 'click');
}

function addMarker(activity) {
  var marker = new google.maps.Marker({
    position: activity.position,
    type: activity.type,
    icon: icons[activity.type].icon,
    map: map,
    activityId: activity.activityId
  });
  marker.addListener('click', function() {
    openInfoWindow(activity.html, marker);
  });
  allActivities.push(marker);
  activityArray[activity.type].push(marker);
}

function openInfoWindow(html, marker)
{
  closeInfoWindow();
  infowindow.setContent(html);
  infowindow.open(map, marker);
}

function closeInfoWindow(map)
{
  if (infowindow.getMap())
    infowindow.close();
}

function clearMarker(marker) {
  try {
    marker.setMap(null);
  }
  catch (error) {

  }
}

function findMarker(markerId) {
  for (var i = 0, activity; activity = allActivities[i]; i++) {
    if (activity.activityId == markerId) {
      return activity;
    }
  }
}

function toggleMarkers(category) {
  for (var i = 0; i < activityArray[category].length; i++) {
    if (activityArray[category][i].map == null) {
      activityArray[category][i].setMap(map);
    }
    else {
      activityArray[category][i].setMap(null);
    }
  }
}

function changeIcon() {
  var activityCategorySelection = $("#activity_activity_type_id").val();
  if (activityCategorySelection != "") {
    activityCategory = activityKeys[activityCategorySelection - 1]
    activityIcon = icons[activityCategory].icon;
    tempMarker.setIcon(activityIcon);
    showHideUniqueField(activityCategory);
    $("#submitButton").prop('disabled', false);
  } else {
    tempMarker.setIcon(newIcon);
    $("#submitButton").prop('disabled', true);
  }
}

function showHideUniqueField(activityCategory) {
  if (activityCategory == 'childrenClasses' || activityCategory == 'studyCircles') {
    $(".uniquefieldDiv").show();
    if (activityCategory == 'childrenClasses') {
      $("#uniquefieldLabel").text("Age");
    }
    else {
      $("#uniquefieldLabel").text("Book");
    }
  }
  else {
    hideUniqueField();
  }
}

function hideUniqueField() {
  $(".uniquefieldDiv").hide();
  $("#uniquefieldLabel").text("");
  $("#uniquefieldLabel").val("");
}

function geoLocate(map) {
  // Try W3C Geolocation (Preferred)
  if(navigator.geolocation) {
    browserSupportFlag = true;
    navigator.geolocation.getCurrentPosition(function(position) {
      initialLocation = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
      map.setCenter(initialLocation);
    }, function() {
      handleNoGeolocation(browserSupportFlag);
    });
  }
  // Browser doesn't support Geolocation
  else {
    browserSupportFlag = false;
    handleNoGeolocation(browserSupportFlag);
  }

  function handleNoGeolocation(errorFlag) {
    if (errorFlag == true) {
      alert("Geolocation service failed. Placing you in the middle of the earth.");
      initialLocation = new google.maps.LatLng(0, 0);
    } else {
      alert("Your browser doesn't support geolocation. We've placed you in Siberia.");
      initialLocation = new google.maps.LatLng(61.0137, 99.1967);
    }
    map.setCenter(initialLocation);
  }
}
